' Gambas class file

' Copyright(C) 2011-2014, Michał Głowienka aka eloaders <eloaders@linux.pl>
'
' This program is free software; you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation; either version 3 of the License, or
' (at your option) any later version.
'
' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.
'
' You should have received a copy of the GNU General Public License
' along with this program. If not, see <http://www.gnu.org/licenses/>.


Public Sub Form_Open()
  Udisks
  Finfosys.Hide
 If Settings["Window/X"] = Null Then
  Me.Center
 Else
  Me.X = Settings["Window/X", Me.X]
  Me.Y = Settings["Window/Y", Me.Y]
 Endif
End

Public Sub Button1_Click()

 ScreenShot.pic = Desktop.Screenshot(Me.X, Me.Y, Me.W + 4, Me.H + 30)
 ScreenShot.Show

End

Public Sub Button2_Click()

 Me.Close
 Finfosys.Show
End

Public Sub Udisks()
 
  Dim sdx As String
  Dim Avail_HDD As Integer 
  Dim Max_HDD As Integer
  Dim cache As String
  Debug "Add Drives to ComboBox"
  Shell "ls /sys/block/ | grep -e 'sd' -e 'sr' | tr ' ' '\n' | wc -l" Wait To cache
  Max_HDD = Val(cache)
  For Avail_HDD = 1 To Max_HDD
   Shell "ls /sys/block/ | grep -e 'sd' -e 'sr' | tr ' ' '\n' | sed -n '" & Avail_HDD & "p'" Wait To sdx
   sdx = Replace(sdx, "\n", "")
   ComboBox1.Add(sdx)
  Next
  Debug "Get information from udisks --show-info" 
  Udisks_get_info
End

Public Sub Udisks_get_info()
 Dim native_path, device, device_file, presentation, by_id_1, by_id_2, by_id_3, by_path, detected_at, system_internal, removable, has_media As String
 Dim detects_change, detection_by_polling, detection_inhibitable, detection_inhibited, is_read_only, is_mounted, mount_paths, mounted_by_uid As String
 Dim presentation_hide, presentation_nopolicy, presentation_name, presentation_icon, automount_hint, size, block_size, job_underway, usage As String
 Dim type, version, uuid, label, partition_table, scheme, count, drive, vendor, model, revision, serial, WWN, detachable, can_spindown, rotational_media As String
 Dim write_cache, ejectable, adapter, ports, similar_devices, media, compat, interface, if_speed, ATA_SMART As String
 Shell "udisks --show-info /dev/" & ComboBox1.Text & " >/tmp/udisks_inex" Wait
 Shell "grep 'native-path' /tmp/udisks_inex | awk {'print $2'}" Wait To native_path
 Shell "sed -n '3p' /tmp/udisks_inex | awk {'print $2'}" Wait To device
 Shell "grep 'device-file' /tmp/udisks_inex | awk {'print $2'}" Wait To device_file
 Shell "sed -n '5p' /tmp/udisks_inex | awk {'print $2'}" Wait To presentation
 Shell "grep 'by-id' /tmp/udisks_inex | sed -n '1p' | awk {'print $2'}" Wait To by_id_1
 Shell "grep 'by-id' /tmp/udisks_inex | sed -n '2p' | awk {'print $2'}" Wait To by_id_2
 Shell "grep 'by-id' /tmp/udisks_inex | sed -n '3p' | awk {'print $2'}" Wait To by_id_3
 Shell "grep 'by-path' /tmp/udisks_inex | awk {'print $2'}" Wait To by_path
 Shell "grep 'detected at:' /tmp/udisks_inex | cut -d ':' -f 2" Wait To detected_at
 Shell "grep 'system internal:' /tmp/udisks_inex | awk {'print $3'}" Wait To system_internal
 Shell "grep 'removable:' /tmp/udisks_inex | awk {'print $2'}" Wait To removable
 Shell "grep 'has media:' /tmp/udisks_inex | cut -d ':' -f 2" Wait To has_media
 Shell "grep 'detects change:' /tmp/udisks_inex | cut -d ':' -f 2" Wait To detects_change
 Shell "grep 'detection by polling:' /tmp/udisks_inex | cut -d ':' -f 2" Wait To detection_by_polling
 Shell "grep 'detection inhibitable' /tmp/udisks_inex | cut -d ':' -f 2" Wait To detection_inhibitable
 Shell "grep 'detection inhibited' /tmp/udisks_inex | cut -d ':' -f 2" Wait To detection_inhibited
 Shell "grep 'is read only' /tmp/udisks_inex | cut -d ':' -f 2" Wait To is_read_only
 Shell "grep 'is mounted' /tmp/udisks_inex | cut -d ':' -f 2" Wait To is_mounted
 Shell "grep 'mount paths' /tmp/udisks_inex | cut -d ':' -f 2" Wait To mount_paths
 Shell "grep 'mounted by uid' /tmp/udisks_inex | cut -d ':' -f 2" Wait To mounted_by_uid
 Shell "grep 'presentation hide' /tmp/udisks_inex | cut -d ':' -f 2" Wait To presentation_hide
 Shell "grep 'presentation nopolicy' /tmp/udisks_inex | cut -d ':' -f 2" Wait To presentation_nopolicy
 Shell "grep 'presentation name' /tmp/udisks_inex | cut -d ':' -f 2" Wait To presentation_name
 Shell "grep 'presentation icon' /tmp/udisks_inex | cut -d ':' -f 2" Wait To presentation_icon
 Shell "grep 'automount hint' /tmp/udisks_inex | cut -d ':' -f 2" Wait To automount_hint
 Shell "grep 'size' /tmp/udisks_inex | cut -d ':' -f 2 | sed -n '1p'" Wait To size
 Shell "grep 'block size' /tmp/udisks_inex | cut -d ':' -f 2" Wait To block_size
 Shell "grep 'job underway' /tmp/udisks_inex | cut -d ':' -f 2" Wait To job_underway
 Shell "grep 'usage' /tmp/udisks_inex | cut -d ':' -f 2" Wait To usage
 Shell "grep 'type' /tmp/udisks_inex | cut -d ':' -f 2" Wait To type
 Shell "grep 'version' /tmp/udisks_inex | cut -d ':' -f 2" Wait To version
 Shell "grep 'uuid' /tmp/udisks_inex | cut -d ':' -f 2" Wait To uuid
 Shell "grep 'label' /tmp/udisks_inex | cut -d ':' -f 2" Wait To label
 Shell "grep 'partition table' /tmp/udisks_inex | cut -d ':' -f 2" Wait To partition_table
 Shell "grep 'scheme' /tmp/udisks_inex | cut -d ':' -f 2" Wait To scheme
 Shell "grep 'count' /tmp/udisks_inex | cut -d ':' -f 2 | sed -n '1p'" Wait To count
 Shell "grep 'drive' /tmp/udisks_inex | cut -d ':' -f 2" Wait To drive
 Shell "grep 'vendor' /tmp/udisks_inex | cut -d ':' -f 2" Wait To vendor
 Shell "grep 'model' /tmp/udisks_inex | cut -d ':' -f 2" Wait To model
 Shell "grep 'revision' /tmp/udisks_inex | cut -d ':' -f 2" Wait To revision
 Shell "grep 'serial' /tmp/udisks_inex | cut -d ':' -f 2" Wait To serial
 Shell "grep 'WWN' /tmp/udisks_inex | cut -d ':' -f 2" Wait To WWN
 Shell "grep 'detachable' /tmp/udisks_inex | cut -d ':' -f 2" Wait To detachable
 Shell "grep 'can spindown' /tmp/udisks_inex | cut -d ':' -f 2" Wait To can_spindown
 Shell "grep 'rotational media' /tmp/udisks_inex | cut -d ':' -f 2" Wait To rotational_media
 Shell "grep 'write-cache' /tmp/udisks_inex | cut -d ':' -f 2" Wait To write_cache
 Shell "grep 'ejectable' /tmp/udisks_inex | cut -d ':' -f 2" Wait To ejectable
 Shell "grep 'adapter' /tmp/udisks_inex | cut -d ':' -f 2" Wait To adapter
 Shell "grep 'ports' /tmp/udisks_inex | cut -d ':' -f 2" Wait To ports
 Shell "grep 'similar devices' /tmp/udisks_inex | cut -d ':' -f 2" Wait To similar_devices
 Shell "grep 'media' /tmp/udisks_inex | cut -d ':' -f 2 | sed -n '3p'" Wait To media
 Shell "grep 'compat' /tmp/udisks_inex | cut -d ':' -f 2" Wait To compat
 Shell "grep 'interface' /tmp/udisks_inex | cut -d ':' -f 2" Wait To interface
 Shell "grep 'if speed' /tmp/udisks_inex | cut -d ':' -f 2" Wait To if_speed
 Shell "grep 'ATA SMART' /tmp/udisks_inex | cut -d ':' -f 2" Wait To ATA_SMART
 

 GridView1.Columns.Count = 2
 GridView1.Rows.Count = 55
 GridView1.Columns[0].Width = 135
 GridView1.Columns[1].Width = 750
 GridView1[0, 1].Text = Replace(native_path, "\n", "")
 GridView1[1, 1].Text = Replace(device, "\n", "")
 GridView1[2, 1].Text = Replace(device_file, "\n", "")
 GridView1[3, 1].Text = Replace(presentation, "\n", "")
 GridView1[4, 1].Text = Replace(by_id_1, "\n", "")
 GridView1[5, 1].Text = Replace(by_id_2, "\n", "")
 GridView1[6, 1].Text = Replace(by_id_3, "\n", "")
 GridView1[7, 1].Text = Replace(by_path, "\n", "")
 GridView1[8, 1].Text = Replace(detected_at, "\n", "")
 GridView1[9, 1].Text = Replace(system_internal, "\n", "")
 GridView1[10, 1].Text = Replace(removable, "\n", "")
 GridView1[11, 1].Text = Replace(has_media, "\n", "")
 GridView1[12, 1].Text = Replace(detects_change, "\n", "")
 GridView1[13, 1].Text = Replace(detection_by_polling, "\n", "")
 GridView1[14, 1].Text = Replace(detection_inhibitable, "\n", "")
 GridView1[15, 1].Text = Replace(detection_inhibited, "\n", "")
 GridView1[16, 1].Text = Replace(is_read_only, "\n", "")
 GridView1[17, 1].Text = Replace(is_mounted, "\n", "")
 GridView1[18, 1].Text = Replace(mount_paths, "\n", "")
 GridView1[19, 1].Text = Replace(mounted_by_uid, "\n", "")
 GridView1[20, 1].Text = Replace(presentation_hide, "\n", "")
 GridView1[21, 1].Text = Replace(presentation_nopolicy, "\n", "")
 GridView1[22, 1].Text = Replace(presentation_name, "\n", "")
 GridView1[23, 1].Text = Replace(presentation_icon, "\n", "")
 GridView1[24, 1].Text = Replace(automount_hint, "\n", "")
 GridView1[25, 1].Text = Replace(size, "\n", "")
 GridView1[26, 1].Text = Replace(block_size, "\n", "")
 GridView1[27, 1].Text = Replace(job_underway, "\n", "")
 GridView1[28, 1].Text = Replace(usage, "\n", "")
 GridView1[29, 1].Text = Replace(type, "\n", "")
 GridView1[30, 1].Text = Replace(version, "\n", "")
 GridView1[31, 1].Text = Replace(uuid, "\n", "")
 GridView1[32, 1].Text = Replace(label, "\n", "")
 GridView1[33, 1].Text = Replace(partition_table, "\n", "")
 GridView1[34, 1].Text = Replace(scheme, "\n", "")
 GridView1[35, 1].Text = Replace(count, "\n", "")
 GridView1[36, 1].Text = Replace(drive, "\n", "")
 GridView1[37, 1].Text = Replace(vendor, "\n", "")
 GridView1[38, 1].Text = Replace(model, "\n", "")
 GridView1[39, 1].Text = Replace(revision, "\n", "")
 GridView1[40, 1].Text = Replace(serial, "\n", "")
 GridView1[41, 1].Text = Replace(WWN, "\n", "")
 GridView1[42, 1].Text = Replace(detachable, "\n", "")
 GridView1[43, 1].Text = Replace(can_spindown, "\n", "")
 GridView1[44, 1].Text = Replace(rotational_media, "\n", "")
 GridView1[45, 1].Text = Replace(write_cache, "\n", "")
 GridView1[46, 1].Text = Replace(ejectable, "\n", "")
 GridView1[47, 1].Text = Replace(adapter, "\n", "")
 GridView1[48, 1].Text = Replace(ports, "\n", "")
 GridView1[49, 1].Text = Replace(similar_devices, "\n", "")
 GridView1[50, 1].Text = Replace(media, "\n", "")
 GridView1[51, 1].Text = Replace(compat, "\n", "")
 GridView1[52, 1].Text = Replace(interface, "\n", "")
 GridView1[53, 1].Text = Replace(if_speed, "\n", "")
 GridView1[54, 1].Text = Replace(ATA_SMART, "\n", "")

 GridView1[0, 0].Text = "Native Path: "
 GridView1[1, 0].Text = "Device: "
 GridView1[2, 0].Text = "Device file: "
 GridView1[3, 0].Text = "Presentation: "
 GridView1[4, 0].Text = "By ID: "
 GridView1[5, 0].Text = "By ID: "
 GridView1[6, 0].Text = "By ID: "
 GridView1[7, 0].Text = "By Path: "
 GridView1[8, 0].Text = "Detected at: "
 GridView1[9, 0].Text = "System internal: "
 GridView1[10, 0].Text = "Removable: "
 GridView1[11, 0].Text = "Has media: "
 GridView1[12, 0].Text = "Detects change: "
 GridView1[13, 0].Text = "Detection by polling: "
 GridView1[14, 0].Text = "Detection inhibitable: "
 GridView1[15, 0].Text = "Detection inhibited: "
 GridView1[16, 0].Text = "Is read only: "
 GridView1[17, 0].Text = "Is mounted: "
 GridView1[18, 0].Text = "Mount paths: "
 GridView1[19, 0].Text = "Mounted by uid: "
 GridView1[20, 0].Text = "Presentation hide: "
 GridView1[21, 0].Text = "Presentation nopolicy: "
 GridView1[22, 0].Text = "Presentation name: "
 GridView1[23, 0].Text = "Presentation icon: "
 GridView1[24, 0].Text = "Automount hint: "
 GridView1[25, 0].Text = "Size: "
 GridView1[26, 0].Text = "Block size: "
 GridView1[27, 0].Text = "Job underway: "
 GridView1[28, 0].Text = "Usage: "
 GridView1[29, 0].Text = "Type: "
 GridView1[30, 0].Text = "Version: "
 GridView1[31, 0].Text = "UUID: "
 GridView1[32, 0].Text = "Label: "
 GridView1[33, 0].Text = "Partition table: "
 GridView1[34, 0].Text = "Scheme: "
 GridView1[35, 0].Text = "Count: "
 GridView1[36, 0].Text = "Drive: "
 GridView1[37, 0].Text = "Vendor: "
 GridView1[38, 0].Text = "Model: "
 GridView1[39, 0].Text = "Revision: "
 GridView1[40, 0].Text = "Serial: "
 GridView1[41, 0].Text = "WWN: "
 GridView1[42, 0].Text = "Detachable: "
 GridView1[43, 0].Text = "Can spindown: "
 GridView1[44, 0].Text = "Rotational media: "
 GridView1[45, 0].Text = "Write cache: "
 GridView1[46, 0].Text = "Ejectable: "
 GridView1[47, 0].Text = "Adapter: "
 GridView1[48, 0].Text = "Ports: "
 GridView1[49, 0].Text = "Similar devices: "
 GridView1[50, 0].Text = "Media: "
 GridView1[51, 0].Text = "Compat: "
 GridView1[52, 0].Text = "Interface: "
 GridView1[53, 0].Text = "If speed: "
 GridView1[54, 0].Text = "ATA SMART: "
 
End

Public Sub ComboBox1_Click()

 Udisks_get_info

End

Public Sub Form_Close()

 Me.Close
 Finfosys.Show

End

Public Sub Form_Resize()
 
 GridView1.W = Me.W
 GridView1.h = Me.h - 30
 HBox1.W = GridView1.W
 HBox1.y = GridView1.h
 HBox2.y = GridView1.h
 HBox2.x = GridView1.w - 150
End
